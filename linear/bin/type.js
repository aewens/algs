// Generated by CoffeeScript 1.7.1
(function() {
  var Type, arr, str;

  str = function(s) {
    if (typeof s !== "string") {
      console.log("Expected type: string");
      return void 0;
    } else {
      return s;
    }
  };

  arr = function(a) {
    if ({}.toString.call(a) !== "[object Array]") {
      console.log("Expected type: array");
      return false;
    } else {
      return a;
    }
  };

  Type = function(type) {
    return new Type.init(str(type));
  };

  Type.init = function(type) {
    this.type = type;
    return this;
  };

  Type.fn = Type.prototype = {
    check: function(p) {
      if (typeof p !== this.type) {
        console.log("Expected type: " + this.type + ", not " + (typeof p));
        return false;
      } else {
        return p;
      }
    },
    arr: function(a) {
      var array, state, x, _i, _len;
      array = arr(a);
      state = false;
      if (array) {
        state = true;
        for (_i = 0, _len = array.length; _i < _len; _i++) {
          x = array[_i];
          if (!this.check(x)) {
            state = false;
          }
        }
      }
      if (!state) {
        console.log("Expected array type: " + this.type);
        return false;
      } else {
        return a;
      }
    }
  };

  Type.init.prototype = Type.fn;

  window.T = Type;

  window.Type = Type;

}).call(this);
